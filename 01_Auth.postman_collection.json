{
	"info": {
		"_postman_id": "07057672-6e80-417f-a799-3151fc0bd54e",
		"name": "01_Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27705872"
	},
	"item": [
		{
			"name": "ValidateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/validateToken",
					"host": [
						"{{url}}"
					],
					"path": [
						"validateToken"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contagem de usuario",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/count",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"count"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listagem usuario",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar novo usuario com sucesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check is fullName True\", function(){\r",
							"    pm.expect(pm.environment.get(\"FullName\")).to.eql(pm.response.json().user.fullName);\r",
							"});\r",
							"\r",
							"pm.test(\"Check is mail True\", function(){\r",
							"    pm.expect(pm.environment.get(\"Mail\")).to.eql(pm.response.json().user.mail);\r",
							"});\r",
							"pm.test(\"Check is cpf True\", function(){\r",
							"    pm.expect(pm.environment.get(\"cpf\")).to.eql(pm.response.json().user.cpf);\r",
							"    });\r",
							" pm.environment.set('userId', pm.response.json().user._id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"//Gerar Primeiro Nome\r",
							"\r",
							"function firstName() {\r",
							"\r",
							"    let firstName = [\"Mario\",\"Andre\",\"Jorge\",\"Ines\",\"Marina\",\"Eduardo\",\"Marcela\",\"Lopes\",\"Aparecida\",\"Rubens\",\"Pedro\",\"Mateus\",\"Leonor\"];\r",
							"\r",
							"    let ramdomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
							"\r",
							"    return ramdomItem\r",
							"}\r",
							"\r",
							"pm.environment.set(\"FirstName\", firstName());\r",
							"\r",
							"//Gerar Ultimo nome\r",
							"\r",
							"function lastName() {\r",
							"\r",
							"    let lastName = [\"de Assis\",\"dos Santos\",\"Andrade Reis\",\"Soares\",\"Mesquita\",\"Vanconcelos\",\"Moreira\",\"Gouveia\",\"Silva Santos\",\"Coelho\",\" Pereira\",\"Augusto\",\"Milano\"];\r",
							"\r",
							"    let ramdomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
							"\r",
							"    return ramdomItem\r",
							"}\r",
							"pm.environment.set(\"LastName\", lastName());\r",
							"\r",
							"// Gerar Nome e Sobrenome\r",
							"\r",
							"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
							"\r",
							"// Gerar provedor de email\r",
							"\r",
							"function providerMail() {\r",
							"\r",
							"    let providerMail = [\"@gmail.com\",\"@hotmail.com\",\"@yahoo.com.br\",\"@uol.com\",\"@outlook.com\"];\r",
							"\r",
							"    let ramdomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
							"\r",
							"    return ramdomItem\r",
							"}\r",
							"pm.environment.set(\"ProviderMail\", providerMail());\r",
							"\r",
							"// Gerar Email commpleto\r",
							"\r",
							"pm.environment.set(\"Mail\", pm.environment.get(\"FirstName\") + \"_\" + pm.variables.replaceIn('{{$guid}}') + pm.environment.get(\"ProviderMail\"));\r",
							"\r",
							"// Gerar CPF\r",
							"\r",
							"function gerarCPF() {\r",
							"    let num = Math.floor(Math.random() * 999999999);\r",
							"    let cpf = num.toString().padStart(9, '0');\r",
							"    cpf += calcularDigito(cpf);\r",
							"    cpf += calcularDigito(cpf);\r",
							" \r",
							"    return cpf;\r",
							"}\r",
							" \r",
							"function calcularDigito(cpf) {\r",
							"    let soma = 0;\r",
							"    for (let i = 0; i < cpf.length; i++) {\r",
							"        soma += parseInt(cpf[i]) * ((cpf.length + 1) - i);\r",
							"    }\r",
							"    let resto = (soma * 10) % 11;\r",
							"    return (resto > 9) ? '0' : resto.toString();\r",
							"}\r",
							" \r",
							"pm.environment.set(\"cpf\", gerarCPF());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca usuario por ID -200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code ins 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/{{userId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"{{userId}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca usuario por ID -403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code ins 403', function () {\r",
							"    pm.response.to.have.status(403);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/65e6208862c4338de3d25274",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"65e6208862c4338de3d25274"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca usuario por ID -404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code ins 404', function () {\r",
							"    pm.response.to.have.status(404);\r",
							"})\r",
							"\r",
							"pm.test('Esse usuário não existe em nossa base de dados.', function () {\r",
							"    pm.expect(pm.globals.get('alertNoExist')).to.eql(JSON.parse(responseBody).alert[0]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/65e6208862c4338de3d25247",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"65e6208862c4338de3d25247"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca usuario por ID -500",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code ins 500', function () {\r",
							"    pm.response.to.have.status(500);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/65e6208862c4338de3d2527",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"65e6208862c4338de3d2527"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualiza usuario por ID- 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code ins 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							" pm.test(\"Dados atualizados com sucesso!\", function(){\r",
							"  pm.expect(pm.response.json().msg).to.exist;\r",
							" });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{tokenUser}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/{{userId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"{{userId}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualiza usuario por ID- 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code ins 400', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test('Esse usuário não existe em nossa base de dados.', function () {\r",
							"    pm.expect(pm.globals.get('alertNoExist')).to.eql(JSON.parse(responseBody).alert[0]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"Pedro dos Santos Silva\",\r\n  \"mail\": \"Pedro_42a2c139-737f-4ef3-81eb-21e489bf9c5c@uol.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/65e6208862c4338de3d25724",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"65e6208862c4338de3d25724"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualiza usuario por ID- 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code ins 403', function () {\r",
							"    pm.response.to.have.status(403);\r",
							"})\r",
							"\r",
							"pm.test(\"Falha na autenticação do token.\", function () {\r",
							"     pm.expect(pm.response.text()).to.include('No token provided.');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"Pedro dos Santos Silva\",\r\n  \"mail\": \"Pedro_42a2c139-737f-4ef3-81eb-21e489bf9c5c@uol.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/65e6208862c4338de3d25274",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"65e6208862c4338de3d25274"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualiza usuario por ID- 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 500', function () {\r",
							"    pm.response.to.have.status(500);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fullName\": \"Pedro dos Santos Silva\",\r\n  \"mail\": \"Pedro_42a2c139-737f-4ef3-81eb-21e489bf9c5c@uol.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/65e6208862c",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"65e6208862c"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete usuario - 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							" pm.test(\"Usuário deletado com sucesso!.\", function(){\r",
							"  pm.expect(pm.response.json().msg).to.exist;\r",
							" });\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/{{userId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"{{userId}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete usuario - 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							" pm.test('Esse usuário não existe em nossa base de dados.', function () {\r",
							"    pm.expect(pm.globals.get('alertNoExist')).to.eql(JSON.parse(responseBody).alert[0]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/65694f1c3c1c97ec10852c92",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"65694f1c3c1c97ec10852c92"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete usuario - 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 403', function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/65694f1c3c1c97ec10852c29",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"65694f1c3c1c97ec10852c29"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete usuario - 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 500', function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/65694",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"65694"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Login com sucessoQaCoders",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code ins 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Check Token is True\", function(){\r",
							"  pm.expect(pm.response.json().token).to.exist;\r",
							"});\r",
							"\r",
							"pm.test('Autenticação autorizada com sucesso.', function () {\r",
							"    pm.expect(pm.globals.get('msgAuthSucess')).to.eql(JSON.parse(responseBody).msg);\r",
							"})\r",
							"\r",
							"pm.globals.set('token', pm.variables.replaceIn(JSON.parse(responseBody).token))\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"mail\": \"sysadmin@qacoders.com\",\r\n  \"password\": \"1234@Test\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/login/",
					"host": [
						"{{url}}"
					],
					"path": [
						"login",
						""
					]
				}
			},
			"response": []
		}
	]
}