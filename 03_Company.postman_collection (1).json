{
	"info": {
		"_postman_id": "10c51693-11f7-4dd1-a8ba-e13a3b3052c9",
		"name": "03_Company",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27705872"
	},
	"item": [
		{
			"name": "Listar  empresas -200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/company/",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar- Erro auth token -403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"Falha na autenticação do token\", function () {",
							"     pm.expect(pm.response.text()).to.include('No token provided.');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/company/",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar- Solicitação invalida- 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \"Teste do Teste\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/company",
					"host": [
						"{{url}}"
					],
					"path": [
						"company"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar- Erro interno servidor- 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://chips.qacoders-academy.com.br/api/company/8",
					"protocol": "https",
					"host": [
						"chips",
						"qacoders-academy",
						"com",
						"br"
					],
					"path": [
						"api",
						"company",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contar empresas -200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/company/count",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"count"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contar- Falha auth token -403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"pm.test(\"Falha na autenticação do token.\", function () {",
							"     pm.expect(pm.response.text()).to.include('No token provided.');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/company/count",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"count"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contar- Nao encontrado -404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/company/count/7",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"count",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contar- Erro interno servidor - 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/company/coun",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"coun"
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar empresa sucess",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed TypeError by correcting the property name",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.environment.set(\"FullNameCorporate\", \"definedFullNameCorporate\");",
							"",
							"pm.environment.set('companyId', pm.response.json().newCompany._id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Gerar  FullName Corporate\r",
							"\r",
							"const corporateName = pm.variables.replaceIn('{{$randomCompanyName}}');\r",
							"const companySuffix = pm.variables.replaceIn('{{$randomCompanySuffix}}');\r",
							"const fullNameCorporate = `${corporateName} ${companySuffix}`;\r",
							"pm.environment.set(\"FullNameCorporate\", fullNameCorporate);\r",
							"\r",
							"// Gerar Register Company \r",
							"const registerCompany = Math.floor(10000000000000 + Math.random() * 90000000000000);\r",
							"pm.environment.set(\"registerCompany\", registerCompany.toString());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \"{{FullNameCorporate}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/company/",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar- Solicitacao invalida - 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Essa companhia já está cadastrada. Verifique o nome, CNPJ e a razão social da companhia.\", function () {\r",
							"     pm.expect(pm.response.text()).to.include('Essa companhia já está cadastrada. Verifique o nome, CNPJ e a razão social da companhia.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \"Candy Market\",\r\n  \"registerCompany\": \"21126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/company/",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar- Erro auth token -403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"\r",
							"pm.test(\"Falha na autenticação do token.\", function () {\r",
							"     pm.expect(pm.response.text()).to.include('No token provided.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \"Candy Market\",\r\n  \"registerCompany\": \"21126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{url}}/company/",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar empresa sucess",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar -acesso negado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"pm.test(\"Falha na autenticação do token\", function () {\r",
							"     pm.expect(pm.response.text()).to.include('No token provided.');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar -erro interno servidor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{tokenUser}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar - not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{tokenUser}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}}/8",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}}",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar - solicitacao invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Msg: Essa companhia não existe em nosso sistema. \", function () {\r",
							"     pm.expect(pm.response.text()).to.include('Essa companhia não existe em nosso sistema.');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{tokenUser}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/company/65f1ef1ca07b3674f10aae8c",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"65f1ef1ca07b3674f10aae8c"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar dados sucess",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Msg:Companhia atualizada com sucesso.\", function () {\r",
							"     pm.expect(pm.response.text()).to.include('Companhia atualizada com sucesso.');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{tokenUser}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \"{{FullNameCorporate}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar dados- Mail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Msg:Companhia atualizada com sucesso.\", function () {",
							"    pm.expect(pm.response.text()).to.include('Companhia atualizada com sucesso.');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const corporateName = pm.variables.replaceIn('{{$randomCompanyName}}');\r",
							"\r",
							"pm.environment.set(\"CorporateName\", corporateName);\r",
							"\r",
							"\r",
							"pm.environment.set(\"CorporateMail\", pm.environment.get(\"CorporateName\") + pm.environment.get(\"ProviderMail\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{tokenUser}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \"{{FullNameCorporate}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{CorporateMail}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar dados- Matriz",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Msg:Companhia atualizada com sucesso.\", function () {",
							"    pm.expect(pm.response.text()).to.include('Companhia atualizada com sucesso.');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const corporateName = pm.variables.replaceIn('{{$randomCompanyName}}');\r",
							"\r",
							"pm.environment.set(\"CorporateName\", corporateName);\r",
							"\r",
							"\r",
							"pm.environment.set(\"CorporateMail\", pm.environment.get(\"CorporateName\") + pm.environment.get(\"ProviderMail\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{tokenUser}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \"{{FullNameCorporate}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{CorporateMail}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar dados- Acesso negado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"pm.test(\"No token provided.\", function () {",
							"    pm.expect(pm.response.text()).to.include('No token provided.');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const corporateName = pm.variables.replaceIn('{{$randomCompanyName}}');\r",
							"\r",
							"pm.environment.set(\"CorporateName\", corporateName);\r",
							"\r",
							"\r",
							"pm.environment.set(\"CorporateMail\", pm.environment.get(\"CorporateName\") + pm.environment.get(\"ProviderMail\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \"{{FullNameCorporate}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{CorporateMail}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar dados- Erro interno servidor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const corporateName = pm.variables.replaceIn('{{$randomCompanyName}}');\r",
							"\r",
							"pm.environment.set(\"CorporateName\", corporateName);\r",
							"\r",
							"\r",
							"pm.environment.set(\"CorporateMail\", pm.environment.get(\"CorporateName\") + pm.environment.get(\"ProviderMail\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{tokenUser}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \"{{FullNameCorporate}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{CorporateMail}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar dados- Solicitacao invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const corporateName = pm.variables.replaceIn('{{$randomCompanyName}}');\r",
							"\r",
							"pm.environment.set(\"CorporateName\", corporateName);\r",
							"\r",
							"\r",
							"pm.environment.set(\"CorporateMail\", pm.environment.get(\"CorporateName\") + pm.environment.get(\"ProviderMail\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{tokenUser}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"corporateName\": \",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"{{CorporateMail}}\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/company/{{companyId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"company",
						"{{companyId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "header",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}